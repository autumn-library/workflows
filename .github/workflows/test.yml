name: Тестирование

on: 
  workflow_call:
    inputs:
      oscript_version:
        required: false
        default: "default"
        type: string
      test_script_path:
        required: false
        type: string
        default: ./tasks/test.os
      additional_oscript_packages:
        description: Package list to install, space separated.
        type: string
        required: false
        default: ""
      dotnet_version:
        description: Version of .NET to install
        type: string
        required: false
        default: ""
      build_package:
        description: Execute 'opm build .' after installing dependencies
        type: boolean
        required: false
        default: false
      os_versions:
        description: Operating systems to run tests on, JSON array format.
        type: string
        required: false
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(inputs.os_versions) }}
        oscript_version: 
          - ${{ inputs.oscript_version }}
        
    steps:
      - name: Актуализация
        uses: actions/checkout@v5.0.0

      - uses: actions/cache@v4
        id: cache
        with:
          path: '**/oscript_modules' 
          key: ${{ runner.os }}-${{ inputs.oscript_version }}-${{ hashFiles('**/packagedef') }}

      - name: Установка свойств git
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Установка .NET
        if: inputs.dotnet_version != ''
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ inputs.dotnet_version }}
      
      - name: Вычисление версии OneScript
        shell: bash
        id: extract_oscript_version
        run: |
          set -ex
          if [ "${{ inputs.oscript_version }}" = "default" ]
          then
            extracted_version=$(cat packagedef | grep ".ВерсияСреды(" | sed 's|[^"]*"||' | sed -r 's/".+//' || true)
            version="${extracted_version:-stable}"
          else
            version="${{ inputs.oscript_version }}"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Установка OneScript
        uses: otymko/setup-onescript@v1.5.1
        with:
          version: ${{ steps.extract_oscript_version.outputs.version }}

      - name: Обновление opm (win)
        if: runner.os == 'Windows'
        shell: cmd
        run: call opm install opm

      - name: Обновление opm (*nix)
        if: runner.os != 'Windows'
        run: opm install opm
          
      - name: Установка зависимостей
        if: steps.cache.outputs.cache-hit != 'true' 
        run: opm install -l --dev
  
      - name: Установка дополнительных пакетов
        if: inputs.additional_oscript_packages != ''
        run: opm install -l ${{ inputs.additional_oscript_packages }}

      - name: Сборка пакета
        if: inputs.build_package == true
        run: opm build .

      - name: Тестирование
        run: oscript ${{ inputs.test_script_path}}
