name: Тестирование

on: 
  workflow_call:
    inputs:
      oscript_version:
        required: false
        default: "default"
        type: string
      test_script_path:
        required: false
        type: string
        default: ./tasks/test.os
      test_script_args:
        required: false
        type: string
        default: ""
      junit_report_path:
        required: false
        type: string
        default: "out/JUnit"

jobs:
  build:
    # permissions:
    #   checks: write
    #   pull-requests: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        oscript_version: 
          - ${{ inputs.oscript_version }}
        
    steps:
      - name: Актуализация
        uses: actions/checkout@v4

      - name: Установка свойств git
        shell: bash
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Вычисление версии OneScript
        shell: bash
        id: extract_oscript_version
        run: |
          set -ex
          if [ "${{ inputs.oscript_version }}" = "default" ]
          then
            extracted_version=$(cat packagedef | grep ".ВерсияСреды(" | sed 's|[^"]*"||' | sed -r 's/".+//' || true)
            version="${extracted_version:-stable}"
          else
            version="${{ inputs.oscript_version }}"
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Установка OneScript
        uses: otymko/setup-onescript@v1.4
        with:
          version: ${{ steps.extract_oscript_version.outputs.version }}

      - name: Установка зависимостей
        run: |
          opm install opm
          opm install -l --dev
          
      - name: Тестирование
        run: oscript ${{ inputs.test_script_path}} ${{ inputs.test_script_args }}

      - name: Загрузка артефактов тестирования
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (oscript ${{ matrix.oscript_version }} on ${{ matrix.os }})
          path: ${{ inputs.junit_report_path }}
          if-no-files-found: ignore
  
  publish-test-results:
    name: "Publish Tests Results"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
      # only needed for private repository
      # contents: read
      # only needed for private repository
      # issues: read
    if: always()

    steps:
      - name: Скачивание артефактов тестирования
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Проверка существования директории с результатами тестов
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: artifacts/**/*.xml

      - name: Сохранение результатов тестирования
        if: steps.check_files.outputs.files_exists == 'true'
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
